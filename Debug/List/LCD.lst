
AVRASM ver. 2.1.30  C:\Users\ShahryaR\Desktop\LCD\Debug\List\LCD.asm Fri Aug 05 13:02:10 2016

C:\Users\ShahryaR\Desktop\LCD\Debug\List\LCD.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\ShahryaR\Desktop\LCD\Debug\List\LCD.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\ShahryaR\Desktop\LCD\Debug\List\LCD.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4e49
000034 5420
000035 4548
000036 4e20      	.DB  0x49,0x4E,0x20,0x54,0x48,0x45,0x20,0x4E
000037 4d41
000038 2045
000039 464f
00003a 4720      	.DB  0x41,0x4D,0x45,0x20,0x4F,0x46,0x20,0x47
00003b 444f
00003c 2500
00003d 3a64
00003e 6425      	.DB  0x4F,0x44,0x0,0x25,0x64,0x3A,0x25,0x64
00003f 253a
000040 2064
000041 2020
000042 2020      	.DB  0x3A,0x25,0x64,0x20,0x20,0x20,0x20,0x20
000043 2020
000044 0020      	.DB  0x20,0x20,0x20,0x0
                 _0x2000003:
000045 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000046 0002      	.DW  0x02
000047 0160      	.DW  __base_y_G100
000048 008a      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000049 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004a 94f8      	CLI
00004b 27ee      	CLR  R30
00004c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004d e0f1      	LDI  R31,1
00004e bffb      	OUT  GICR,R31
00004f bfeb      	OUT  GICR,R30
000050 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000051 e08d      	LDI  R24,(14-2)+1
000052 e0a2      	LDI  R26,2
000053 27bb      	CLR  R27
                 __CLEAR_REG:
000054 93ed      	ST   X+,R30
000055 958a      	DEC  R24
000056 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000057 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000058 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000059 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005a 93ed      	ST   X+,R30
00005b 9701      	SBIW R24,1
00005c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005d e8ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005f 9185      	LPM  R24,Z+
000060 9195      	LPM  R25,Z+
000061 9700      	SBIW R24,0
000062 f061      	BREQ __GLOBAL_INI_END
000063 91a5      	LPM  R26,Z+
000064 91b5      	LPM  R27,Z+
000065 9005      	LPM  R0,Z+
000066 9015      	LPM  R1,Z+
000067 01bf      	MOVW R22,R30
000068 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000069 9005      	LPM  R0,Z+
00006a 920d      	ST   X+,R0
00006b 9701      	SBIW R24,1
00006c f7e1      	BRNE __GLOBAL_INI_LOOP
00006d 01fb      	MOVW R30,R22
00006e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000070 bfed      	OUT  SPL,R30
000071 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000072 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000073 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000074 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000075 940c 0077 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project : LCD
                 ;Version : 1.1
                 ;Date    : 05/08/2016
                 ;Author  : SHAHRYAR
                 ;Company :
                 ;Comments:
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 1/000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;void main(void)
                 ; 0000 0017 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0018 
                 ; 0000 0019 int s=0,m=0,h=0;
                 ; 0000 001A char b[16];
                 ; 0000 001B 
                 ; 0000 001C 
                 ; 0000 001D DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000077 9760      	SBIW R28,16
                 ;	s -> R16,R17
                 ;	m -> R18,R19
                 ;	h -> R20,R21
                 ;	b -> Y+0
                +
000078 e000     +LDI R16 , LOW ( 0 )
000079 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00007a e020     +LDI R18 , LOW ( 0 )
00007b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00007c e040     +LDI R20 , LOW ( 0 )
00007d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00007e e0e0      	LDI  R30,LOW(0)
00007f bbea      	OUT  0x1A,R30
                 ; 0000 001E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 001F PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000080 bbeb      	OUT  0x1B,R30
                 ; 0000 0020 
                 ; 0000 0021 // Port B initialization
                 ; 0000 0022 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0023 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000081 bbe7      	OUT  0x17,R30
                 ; 0000 0024 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0025 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000082 bbe8      	OUT  0x18,R30
                 ; 0000 0026 
                 ; 0000 0027 // Port C initialization
                 ; 0000 0028 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0029 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000083 bbe4      	OUT  0x14,R30
                 ; 0000 002A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000084 bbe5      	OUT  0x15,R30
                 ; 0000 002C 
                 ; 0000 002D // Port D initialization
                 ; 0000 002E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002F DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000085 bbe1      	OUT  0x11,R30
                 ; 0000 0030 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0031 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000086 bbe2      	OUT  0x12,R30
                 ; 0000 0032 
                 ; 0000 0033 // Timer/Counter 0 initialization
                 ; 0000 0034 // Clock source: System Clock
                 ; 0000 0035 // Clock value: Timer 0 Stopped
                 ; 0000 0036 // Mode: Normal top=0xFF
                 ; 0000 0037 // OC0 output: Disconnected
                 ; 0000 0038 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000087 bfe3      	OUT  0x33,R30
                 ; 0000 0039 TCNT0=0x00;
000088 bfe2      	OUT  0x32,R30
                 ; 0000 003A OCR0=0x00;
000089 bfec      	OUT  0x3C,R30
                 ; 0000 003B 
                 ; 0000 003C // Timer/Counter 1 initialization
                 ; 0000 003D // Clock source: System Clock
                 ; 0000 003E // Clock value: Timer1 Stopped
                 ; 0000 003F // Mode: Normal top=0xFFFF
                 ; 0000 0040 // OC1A output: Disconnected
                 ; 0000 0041 // OC1B output: Disconnected
                 ; 0000 0042 // Noise Canceler: Off
                 ; 0000 0043 // Input Capture on Falling Edge
                 ; 0000 0044 // Timer1 Overflow Interrupt: Off
                 ; 0000 0045 // Input Capture Interrupt: Off
                 ; 0000 0046 // Compare A Match Interrupt: Off
                 ; 0000 0047 // Compare B Match Interrupt: Off
                 ; 0000 0048 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00008a bdef      	OUT  0x2F,R30
                 ; 0000 0049 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00008b bdee      	OUT  0x2E,R30
                 ; 0000 004A TCNT1H=0x00;
00008c bded      	OUT  0x2D,R30
                 ; 0000 004B TCNT1L=0x00;
00008d bdec      	OUT  0x2C,R30
                 ; 0000 004C ICR1H=0x00;
00008e bde7      	OUT  0x27,R30
                 ; 0000 004D ICR1L=0x00;
00008f bde6      	OUT  0x26,R30
                 ; 0000 004E OCR1AH=0x00;
000090 bdeb      	OUT  0x2B,R30
                 ; 0000 004F OCR1AL=0x00;
000091 bdea      	OUT  0x2A,R30
                 ; 0000 0050 OCR1BH=0x00;
000092 bde9      	OUT  0x29,R30
                 ; 0000 0051 OCR1BL=0x00;
000093 bde8      	OUT  0x28,R30
                 ; 0000 0052 
                 ; 0000 0053 // Timer/Counter 2 initialization
                 ; 0000 0054 // Clock source: System Clock
                 ; 0000 0055 // Clock value: Timer2 Stopped
                 ; 0000 0056 // Mode: Normal top=0xFF
                 ; 0000 0057 // OC2 output: Disconnected
                 ; 0000 0058 ASSR=0<<AS2;
000094 bde2      	OUT  0x22,R30
                 ; 0000 0059 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000095 bde5      	OUT  0x25,R30
                 ; 0000 005A TCNT2=0x00;
000096 bde4      	OUT  0x24,R30
                 ; 0000 005B OCR2=0x00;
000097 bde3      	OUT  0x23,R30
                 ; 0000 005C 
                 ; 0000 005D // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 005E TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000098 bfe9      	OUT  0x39,R30
                 ; 0000 005F 
                 ; 0000 0060 // External Interrupt(s) initialization
                 ; 0000 0061 // INT0: Off
                 ; 0000 0062 // INT1: Off
                 ; 0000 0063 // INT2: Off
                 ; 0000 0064 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000099 bfe5      	OUT  0x35,R30
                 ; 0000 0065 MCUCSR=(0<<ISC2);
00009a bfe4      	OUT  0x34,R30
                 ; 0000 0066 
                 ; 0000 0067 // USART initialization
                 ; 0000 0068 // USART disabled
                 ; 0000 0069 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
00009b b9ea      	OUT  0xA,R30
                 ; 0000 006A 
                 ; 0000 006B // Analog Comparator initialization
                 ; 0000 006C // Analog Comparator: Off
                 ; 0000 006D // The Analog Comparator's positive input is
                 ; 0000 006E // connected to the AIN0 pin
                 ; 0000 006F // The Analog Comparator's negative input is
                 ; 0000 0070 // connected to the AIN1 pin
                 ; 0000 0071 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
00009c e8e0      	LDI  R30,LOW(128)
00009d b9e8      	OUT  0x8,R30
                 ; 0000 0072 SFIOR=(0<<ACME);
00009e e0e0      	LDI  R30,LOW(0)
00009f bfe0      	OUT  0x30,R30
                 ; 0000 0073 
                 ; 0000 0074 // ADC initialization
                 ; 0000 0075 // ADC disabled
                 ; 0000 0076 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000a0 b9e6      	OUT  0x6,R30
                 ; 0000 0077 
                 ; 0000 0078 // SPI initialization
                 ; 0000 0079 // SPI disabled
                 ; 0000 007A SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000a1 b9ed      	OUT  0xD,R30
                 ; 0000 007B 
                 ; 0000 007C // TWI initialization
                 ; 0000 007D // TWI disabled
                 ; 0000 007E TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000a2 bfe6      	OUT  0x36,R30
                 ; 0000 007F 
                 ; 0000 0080 // Alphanumeric LCD initialization
                 ; 0000 0081 // Connections are specified in the
                 ; 0000 0082 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0083 // RS - PORTA Bit 0
                 ; 0000 0084 // RD - PORTA Bit 1
                 ; 0000 0085 // EN - PORTA Bit 2
                 ; 0000 0086 // D4 - PORTA Bit 4
                 ; 0000 0087 // D5 - PORTA Bit 5
                 ; 0000 0088 // D6 - PORTA Bit 6
                 ; 0000 0089 // D7 - PORTA Bit 7
                 ; 0000 008A // Characters/line: 16
                 ; 0000 008B 
                 ; 0000 008C 
                 ; 0000 008D 
                 ; 0000 008E lcd_init(16);
0000a3 e1a0      	LDI  R26,LOW(16)
0000a4 d0b5      	RCALL _lcd_init
                 ; 0000 008F lcd_clear();
0000a5 d071      	RCALL _lcd_clear
                 ; 0000 0090 lcd_putsf("IN THE NAME OF GOD");
                +
0000a6 e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000a7 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000a8 d09e      	RCALL _lcd_putsf
                 ; 0000 0091 delay_ms(5000);
0000a9 e8a8      	LDI  R26,LOW(5000)
0000aa e1b3      	LDI  R27,HIGH(5000)
0000ab 940e 0386 	CALL _delay_ms
                 ; 0000 0092 lcd_clear();
0000ad d069      	RCALL _lcd_clear
                 ; 0000 0093 
                 ; 0000 0094 while (1)
                 _0x3:
                 ; 0000 0095       {
                 ; 0000 0096       s++;
                +
0000ae 5f0f     +SUBI R16 , LOW ( - 1 )
0000af 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0097       if(s>59)
                +
0000b0 330c     +CPI R16 , LOW ( 60 )
0000b1 e0e0     +LDI R30 , HIGH ( 60 )
0000b2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,60
0000b3 f024      	BRLT _0x6
                 ; 0000 0098       {m++; s=0;}
                +
0000b4 5f2f     +SUBI R18 , LOW ( - 1 )
0000b5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                +
0000b6 e000     +LDI R16 , LOW ( 0 )
0000b7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 0099       if(m>59)
                 _0x6:
                +
0000b8 332c     +CPI R18 , LOW ( 60 )
0000b9 e0e0     +LDI R30 , HIGH ( 60 )
0000ba 073e     +CPC R19 , R30
                 	__CPWRN 18,19,60
0000bb f024      	BRLT _0x7
                 ; 0000 009A       {h++; m=0;}
                +
0000bc 5f4f     +SUBI R20 , LOW ( - 1 )
0000bd 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                +
0000be e020     +LDI R18 , LOW ( 0 )
0000bf e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 009B       if(h>23)
                 _0x7:
                +
0000c0 3148     +CPI R20 , LOW ( 24 )
0000c1 e0e0     +LDI R30 , HIGH ( 24 )
0000c2 075e     +CPC R21 , R30
                 	__CPWRN 20,21,24
0000c3 f034      	BRLT _0x8
                 ; 0000 009C       {h=0; m=0; s=0;}
                +
0000c4 e040     +LDI R20 , LOW ( 0 )
0000c5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                +
0000c6 e020     +LDI R18 , LOW ( 0 )
0000c7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0000c8 e000     +LDI R16 , LOW ( 0 )
0000c9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 009D       sprintf(b,"%d:%d:%d        ",h,m,s);
                 _0x8:
0000ca 01fe      	MOVW R30,R28
0000cb 93fa      	ST   -Y,R31
0000cc 93ea      	ST   -Y,R30
                +
0000cd e7e9     +LDI R30 , LOW ( 2 * _0x0 + ( 19 ) )
0000ce e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW1FN _0x0,19
0000cf 93fa      	ST   -Y,R31
0000d0 93ea      	ST   -Y,R30
0000d1 01fa      	MOVW R30,R20
0000d2 940e 0348 	CALL SUBOPT_0x0
0000d4 01f9      	MOVW R30,R18
0000d5 940e 0348 	CALL SUBOPT_0x0
0000d7 01f8      	MOVW R30,R16
0000d8 940e 0348 	CALL SUBOPT_0x0
0000da e08c      	LDI  R24,12
0000db 940e 02fb 	CALL _sprintf
0000dd 9660      	ADIW R28,16
                 ; 0000 009E       lcd_gotoxy(0,0);
0000de e0e0      	LDI  R30,LOW(0)
0000df 93ea      	ST   -Y,R30
0000e0 e0a0      	LDI  R26,LOW(0)
0000e1 d028      	RCALL _lcd_gotoxy
                 ; 0000 009F       lcd_puts(b);
0000e2 01de      	MOVW R26,R28
0000e3 d054      	RCALL _lcd_puts
                 ; 0000 00A0       delay_ms(950);
0000e4 eba6      	LDI  R26,LOW(950)
0000e5 e0b3      	LDI  R27,HIGH(950)
0000e6 940e 0386 	CALL _delay_ms
                 ; 0000 00A1       }
0000e8 cfc5      	RJMP _0x3
                 ; 0000 00A2 }
                 _0x9:
0000e9 cfff      	RJMP _0x9
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000ea 93aa      	ST   -Y,R26
0000eb b3eb      	IN   R30,0x1B
0000ec 70ef      	ANDI R30,LOW(0xF)
0000ed 2fae      	MOV  R26,R30
0000ee 81e8      	LD   R30,Y
0000ef 7fe0      	ANDI R30,LOW(0xF0)
0000f0 2bea      	OR   R30,R26
0000f1 bbeb      	OUT  0x1B,R30
                +
0000f2 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000f3 958a     +DEC R24
0000f4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000f5 9ada      	SBI  0x1B,2
                +
0000f6 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000f7 958a     +DEC R24
0000f8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000f9 98da      	CBI  0x1B,2
                +
0000fa e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000fb 958a     +DEC R24
0000fc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000fd c087      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000fe 93aa      	ST   -Y,R26
0000ff 81a8      	LD   R26,Y
000100 dfe9      	RCALL __lcd_write_nibble_G100
000101 81e8          ld    r30,y
000102 95e2          swap  r30
000103 83e8          st    y,r30
000104 81a8      	LD   R26,Y
000105 dfe4      	RCALL __lcd_write_nibble_G100
                +
000106 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000107 958a     +DEC R24
000108 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000109 c07b      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00010a 93aa      	ST   -Y,R26
00010b 81e8      	LD   R30,Y
00010c e0f0      	LDI  R31,0
00010d 5ae0      	SUBI R30,LOW(-__base_y_G100)
00010e 4ffe      	SBCI R31,HIGH(-__base_y_G100)
00010f 81e0      	LD   R30,Z
000110 81a9      	LDD  R26,Y+1
000111 0fae      	ADD  R26,R30
000112 dfeb      	RCALL __lcd_write_data
000113 8059      	LDD  R5,Y+1
000114 8048      	LDD  R4,Y+0
000115 9622      	ADIW R28,2
000116 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000117 e0a2      	LDI  R26,LOW(2)
000118 940e 034d 	CALL SUBOPT_0x1
00011a e0ac      	LDI  R26,LOW(12)
00011b dfe2      	RCALL __lcd_write_data
00011c e0a1      	LDI  R26,LOW(1)
00011d 940e 034d 	CALL SUBOPT_0x1
00011f e0e0      	LDI  R30,LOW(0)
000120 2e4e      	MOV  R4,R30
000121 2e5e      	MOV  R5,R30
000122 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000123 93aa      	ST   -Y,R26
000124 81a8      	LD   R26,Y
000125 30aa      	CPI  R26,LOW(0xA)
000126 f011      	BREQ _0x2000005
000127 1457      	CP   R5,R7
000128 f048      	BRLO _0x2000004
                 _0x2000005:
000129 e0e0      	LDI  R30,LOW(0)
00012a 93ea      	ST   -Y,R30
00012b 9443      	INC  R4
00012c 2da4      	MOV  R26,R4
00012d dfdc      	RCALL _lcd_gotoxy
00012e 81a8      	LD   R26,Y
00012f 30aa      	CPI  R26,LOW(0xA)
000130 f409      	BRNE _0x2000007
000131 c053      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000132 9453      	INC  R5
000133 9ad8      	SBI  0x1B,0
000134 81a8      	LD   R26,Y
000135 dfc8      	RCALL __lcd_write_data
000136 98d8      	CBI  0x1B,0
000137 c04d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000138 93ba      	ST   -Y,R27
000139 93aa      	ST   -Y,R26
00013a 931a      	ST   -Y,R17
                 _0x2000008:
00013b 81a9      	LDD  R26,Y+1
00013c 81ba      	LDD  R27,Y+1+1
00013d 91ed      	LD   R30,X+
00013e 83a9      	STD  Y+1,R26
00013f 83ba      	STD  Y+1+1,R27
000140 2f1e      	MOV  R17,R30
000141 30e0      	CPI  R30,0
000142 f019      	BREQ _0x200000A
000143 2fa1      	MOV  R26,R17
000144 dfde      	RCALL _lcd_putchar
000145 cff5      	RJMP _0x2000008
                 _0x200000A:
000146 c010      	RJMP _0x2080003
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000147 93ba      	ST   -Y,R27
000148 93aa      	ST   -Y,R26
000149 931a      	ST   -Y,R17
                 _0x200000B:
00014a 81e9      	LDD  R30,Y+1
00014b 81fa      	LDD  R31,Y+1+1
00014c 9631      	ADIW R30,1
00014d 83e9      	STD  Y+1,R30
00014e 83fa      	STD  Y+1+1,R31
00014f 9731      	SBIW R30,1
000150 91e4      	LPM  R30,Z
000151 2f1e      	MOV  R17,R30
000152 30e0      	CPI  R30,0
000153 f019      	BREQ _0x200000D
000154 2fa1      	MOV  R26,R17
000155 dfcd      	RCALL _lcd_putchar
000156 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x2080003:
000157 8118      	LDD  R17,Y+0
000158 9623      	ADIW R28,3
000159 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00015a 93aa      	ST   -Y,R26
00015b b3ea      	IN   R30,0x1A
00015c 6fe0      	ORI  R30,LOW(0xF0)
00015d bbea      	OUT  0x1A,R30
00015e 9ad2      	SBI  0x1A,2
00015f 9ad0      	SBI  0x1A,0
000160 9ad1      	SBI  0x1A,1
000161 98da      	CBI  0x1B,2
000162 98d8      	CBI  0x1B,0
000163 98d9      	CBI  0x1B,1
000164 8078      	LDD  R7,Y+0
000165 81e8      	LD   R30,Y
000166 58e0      	SUBI R30,-LOW(128)
                +
000167 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000169 81e8      	LD   R30,Y
00016a 54e0      	SUBI R30,-LOW(192)
                +
00016b 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00016d e1a4      	LDI  R26,LOW(20)
00016e e0b0      	LDI  R27,0
00016f 940e 0386 	CALL _delay_ms
000171 940e 0353 	CALL SUBOPT_0x2
000173 940e 0353 	CALL SUBOPT_0x2
000175 940e 0353 	CALL SUBOPT_0x2
000177 e2a0      	LDI  R26,LOW(32)
000178 df71      	RCALL __lcd_write_nibble_G100
                +
000179 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00017a 958a     +DEC R24
00017b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00017c e2a8      	LDI  R26,LOW(40)
00017d df80      	RCALL __lcd_write_data
00017e e0a4      	LDI  R26,LOW(4)
00017f df7e      	RCALL __lcd_write_data
000180 e8a5      	LDI  R26,LOW(133)
000181 df7c      	RCALL __lcd_write_data
000182 e0a6      	LDI  R26,LOW(6)
000183 df7a      	RCALL __lcd_write_data
000184 df92      	RCALL _lcd_clear
                 _0x2080002:
000185 9621      	ADIW R28,1
000186 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000187 93ba      	ST   -Y,R27
000188 93aa      	ST   -Y,R26
000189 931a      	ST   -Y,R17
00018a 930a      	ST   -Y,R16
00018b 81aa      	LDD  R26,Y+2
00018c 81bb      	LDD  R27,Y+2+1
00018d 9612      	ADIW R26,2
00018e 940e 039d 	CALL __GETW1P
000190 9730      	SBIW R30,0
000191 f159      	BREQ _0x2020010
000192 81aa      	LDD  R26,Y+2
000193 81bb      	LDD  R27,Y+2+1
000194 9614      	ADIW R26,4
000195 940e 039d 	CALL __GETW1P
000197 018f      	MOVW R16,R30
000198 9730      	SBIW R30,0
000199 f061      	BREQ _0x2020012
                +
00019a 3002     +CPI R16 , LOW ( 2 )
00019b e0e0     +LDI R30 , HIGH ( 2 )
00019c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00019d f098      	BRLO _0x2020013
00019e 01f8      	MOVW R30,R16
00019f 9731      	SBIW R30,1
0001a0 018f      	MOVW R16,R30
                +
0001a1 81aa     +LDD R26 , Y + 2
0001a2 81bb     +LDD R27 , Y + 2 + 1
0001a3 9614     +ADIW R26 , 4
0001a4 93ed     +ST X + , R30
0001a5 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001a6 81aa      	LDD  R26,Y+2
0001a7 81bb      	LDD  R27,Y+2+1
0001a8 9612      	ADIW R26,2
0001a9 91ed      	LD   R30,X+
0001aa 91fd      	LD   R31,X+
0001ab 9631      	ADIW R30,1
0001ac 93fe      	ST   -X,R31
0001ad 93ee      	ST   -X,R30
0001ae 9731      	SBIW R30,1
0001af 81ac      	LDD  R26,Y+4
0001b0 83a0      	STD  Z+0,R26
                 _0x2020013:
0001b1 81aa      	LDD  R26,Y+2
0001b2 81bb      	LDD  R27,Y+2+1
0001b3 940e 039d 	CALL __GETW1P
0001b5 23ff      	TST  R31
0001b6 f02a      	BRMI _0x2020014
0001b7 91ed      	LD   R30,X+
0001b8 91fd      	LD   R31,X+
0001b9 9631      	ADIW R30,1
0001ba 93fe      	ST   -X,R31
0001bb 93ee      	ST   -X,R30
                 _0x2020014:
0001bc c006      	RJMP _0x2020015
                 _0x2020010:
0001bd 81aa      	LDD  R26,Y+2
0001be 81bb      	LDD  R27,Y+2+1
0001bf efef      	LDI  R30,LOW(65535)
0001c0 efff      	LDI  R31,HIGH(65535)
0001c1 93ed      	ST   X+,R30
0001c2 93fc      	ST   X,R31
                 _0x2020015:
0001c3 8119      	LDD  R17,Y+1
0001c4 8108      	LDD  R16,Y+0
0001c5 9625      	ADIW R28,5
0001c6 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001c7 93ba      	ST   -Y,R27
0001c8 93aa      	ST   -Y,R26
0001c9 9726      	SBIW R28,6
0001ca 940e 03aa 	CALL __SAVELOCR6
0001cc e010      	LDI  R17,0
0001cd 85ac      	LDD  R26,Y+12
0001ce 85bd      	LDD  R27,Y+12+1
0001cf e0e0      	LDI  R30,LOW(0)
0001d0 e0f0      	LDI  R31,HIGH(0)
0001d1 93ed      	ST   X+,R30
0001d2 93fc      	ST   X,R31
                 _0x2020016:
0001d3 89ea      	LDD  R30,Y+18
0001d4 89fb      	LDD  R31,Y+18+1
0001d5 9631      	ADIW R30,1
0001d6 8bea      	STD  Y+18,R30
0001d7 8bfb      	STD  Y+18+1,R31
0001d8 9731      	SBIW R30,1
0001d9 91e4      	LPM  R30,Z
0001da 2f2e      	MOV  R18,R30
0001db 30e0      	CPI  R30,0
0001dc f409      	BRNE PC+2
0001dd c115      	RJMP _0x2020018
0001de 2fe1      	MOV  R30,R17
0001df 30e0      	CPI  R30,0
0001e0 f439      	BRNE _0x202001C
0001e1 3225      	CPI  R18,37
0001e2 f411      	BRNE _0x202001D
0001e3 e011      	LDI  R17,LOW(1)
0001e4 c002      	RJMP _0x202001E
                 _0x202001D:
0001e5 940e 035a 	CALL SUBOPT_0x3
                 _0x202001E:
0001e7 c10a      	RJMP _0x202001B
                 _0x202001C:
0001e8 30e1      	CPI  R30,LOW(0x1)
0001e9 f4a9      	BRNE _0x202001F
0001ea 3225      	CPI  R18,37
0001eb f419      	BRNE _0x2020020
0001ec 940e 035a 	CALL SUBOPT_0x3
0001ee c102      	RJMP _0x20200CC
                 _0x2020020:
0001ef e012      	LDI  R17,LOW(2)
0001f0 e040      	LDI  R20,LOW(0)
0001f1 e000      	LDI  R16,LOW(0)
0001f2 322d      	CPI  R18,45
0001f3 f411      	BRNE _0x2020021
0001f4 e001      	LDI  R16,LOW(1)
0001f5 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001f6 322b      	CPI  R18,43
0001f7 f411      	BRNE _0x2020022
0001f8 e24b      	LDI  R20,LOW(43)
0001f9 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001fa 3220      	CPI  R18,32
0001fb f411      	BRNE _0x2020023
0001fc e240      	LDI  R20,LOW(32)
0001fd c0f4      	RJMP _0x202001B
                 _0x2020023:
0001fe c002      	RJMP _0x2020024
                 _0x202001F:
0001ff 30e2      	CPI  R30,LOW(0x2)
000200 f439      	BRNE _0x2020025
                 _0x2020024:
000201 e050      	LDI  R21,LOW(0)
000202 e013      	LDI  R17,LOW(3)
000203 3320      	CPI  R18,48
000204 f411      	BRNE _0x2020026
000205 6800      	ORI  R16,LOW(128)
000206 c0eb      	RJMP _0x202001B
                 _0x2020026:
000207 c003      	RJMP _0x2020027
                 _0x2020025:
000208 30e3      	CPI  R30,LOW(0x3)
000209 f009      	BREQ PC+2
00020a c0e7      	RJMP _0x202001B
                 _0x2020027:
00020b 3320      	CPI  R18,48
00020c f010      	BRLO _0x202002A
00020d 332a      	CPI  R18,58
00020e f008      	BRLO _0x202002B
                 _0x202002A:
00020f c007      	RJMP _0x2020029
                 _0x202002B:
000210 e0aa      	LDI  R26,LOW(10)
000211 9f5a      	MUL  R21,R26
000212 2d50      	MOV  R21,R0
000213 2fe2      	MOV  R30,R18
000214 53e0      	SUBI R30,LOW(48)
000215 0f5e      	ADD  R21,R30
000216 c0db      	RJMP _0x202001B
                 _0x2020029:
000217 2fe2      	MOV  R30,R18
000218 36e3      	CPI  R30,LOW(0x63)
000219 f449      	BRNE _0x202002F
00021a 940e 0361 	CALL SUBOPT_0x4
00021c 89e8      	LDD  R30,Y+16
00021d 89f9      	LDD  R31,Y+16+1
00021e 81a4      	LDD  R26,Z+4
00021f 93aa      	ST   -Y,R26
000220 940e 0367 	CALL SUBOPT_0x5
000222 c0ce      	RJMP _0x2020030
                 _0x202002F:
000223 37e3      	CPI  R30,LOW(0x73)
000224 f441      	BRNE _0x2020032
000225 940e 0361 	CALL SUBOPT_0x4
000227 940e 036d 	CALL SUBOPT_0x6
000229 940e 032f 	CALL _strlen
00022b 2f1e      	MOV  R17,R30
00022c c00a      	RJMP _0x2020033
                 _0x2020032:
00022d 37e0      	CPI  R30,LOW(0x70)
00022e f461      	BRNE _0x2020035
00022f 940e 0361 	CALL SUBOPT_0x4
000231 940e 036d 	CALL SUBOPT_0x6
000233 940e 033b 	CALL _strlenf
000235 2f1e      	MOV  R17,R30
000236 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000237 6002      	ORI  R16,LOW(2)
000238 770f      	ANDI R16,LOW(127)
000239 e030      	LDI  R19,LOW(0)
00023a c034      	RJMP _0x2020036
                 _0x2020035:
00023b 36e4      	CPI  R30,LOW(0x64)
00023c f011      	BREQ _0x2020039
00023d 36e9      	CPI  R30,LOW(0x69)
00023e f411      	BRNE _0x202003A
                 _0x2020039:
00023f 6004      	ORI  R16,LOW(4)
000240 c002      	RJMP _0x202003B
                 _0x202003A:
000241 37e5      	CPI  R30,LOW(0x75)
000242 f431      	BRNE _0x202003C
                 _0x202003B:
000243 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000244 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000245 83ee      	STD  Y+6,R30
000246 83ff      	STD  Y+6+1,R31
000247 e015      	LDI  R17,LOW(5)
000248 c00c      	RJMP _0x202003D
                 _0x202003C:
000249 35e8      	CPI  R30,LOW(0x58)
00024a f411      	BRNE _0x202003F
00024b 6008      	ORI  R16,LOW(8)
00024c c003      	RJMP _0x2020040
                 _0x202003F:
00024d 37e8      	CPI  R30,LOW(0x78)
00024e f009      	BREQ PC+2
00024f c0a1      	RJMP _0x2020071
                 _0x2020040:
000250 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000251 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000252 83ee      	STD  Y+6,R30
000253 83ff      	STD  Y+6+1,R31
000254 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000255 ff02      	SBRS R16,2
000256 c014      	RJMP _0x2020042
000257 940e 0361 	CALL SUBOPT_0x4
000259 940e 0377 	CALL SUBOPT_0x7
00025b 85ab      	LDD  R26,Y+11
00025c 23aa      	TST  R26
00025d f43a      	BRPL _0x2020043
00025e 85ea      	LDD  R30,Y+10
00025f 85fb      	LDD  R31,Y+10+1
000260 940e 0394 	CALL __ANEGW1
000262 87ea      	STD  Y+10,R30
000263 87fb      	STD  Y+10+1,R31
000264 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000265 3040      	CPI  R20,0
000266 f011      	BREQ _0x2020044
000267 5f1f      	SUBI R17,-LOW(1)
000268 c001      	RJMP _0x2020045
                 _0x2020044:
000269 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00026a c004      	RJMP _0x2020046
                 _0x2020042:
00026b 940e 0361 	CALL SUBOPT_0x4
00026d 940e 0377 	CALL SUBOPT_0x7
                 _0x2020046:
                 _0x2020036:
00026f fd00      	SBRC R16,0
000270 c011      	RJMP _0x2020047
                 _0x2020048:
000271 1715      	CP   R17,R21
000272 f478      	BRSH _0x202004A
000273 ff07      	SBRS R16,7
000274 c008      	RJMP _0x202004B
000275 ff02      	SBRS R16,2
000276 c004      	RJMP _0x202004C
000277 7f0b      	ANDI R16,LOW(251)
000278 2f24      	MOV  R18,R20
000279 5011      	SUBI R17,LOW(1)
00027a c001      	RJMP _0x202004D
                 _0x202004C:
00027b e320      	LDI  R18,LOW(48)
                 _0x202004D:
00027c c001      	RJMP _0x202004E
                 _0x202004B:
00027d e220      	LDI  R18,LOW(32)
                 _0x202004E:
00027e 940e 035a 	CALL SUBOPT_0x3
000280 5051      	SUBI R21,LOW(1)
000281 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000282 2f31      	MOV  R19,R17
000283 ff01      	SBRS R16,1
000284 c017      	RJMP _0x202004F
                 _0x2020050:
000285 3030      	CPI  R19,0
000286 f0a1      	BREQ _0x2020052
000287 ff03      	SBRS R16,3
000288 c006      	RJMP _0x2020053
000289 81ee      	LDD  R30,Y+6
00028a 81ff      	LDD  R31,Y+6+1
00028b 9125      	LPM  R18,Z+
00028c 83ee      	STD  Y+6,R30
00028d 83ff      	STD  Y+6+1,R31
00028e c005      	RJMP _0x2020054
                 _0x2020053:
00028f 81ae      	LDD  R26,Y+6
000290 81bf      	LDD  R27,Y+6+1
000291 912d      	LD   R18,X+
000292 83ae      	STD  Y+6,R26
000293 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000294 940e 035a 	CALL SUBOPT_0x3
000296 3050      	CPI  R21,0
000297 f009      	BREQ _0x2020055
000298 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000299 5031      	SUBI R19,LOW(1)
00029a cfea      	RJMP _0x2020050
                 _0x2020052:
00029b c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00029c e320      	LDI  R18,LOW(48)
00029d 81ee      	LDD  R30,Y+6
00029e 81ff      	LDD  R31,Y+6+1
00029f 940e 03a1 	CALL __GETW1PF
0002a1 87e8      	STD  Y+8,R30
0002a2 87f9      	STD  Y+8+1,R31
0002a3 81ee      	LDD  R30,Y+6
0002a4 81ff      	LDD  R31,Y+6+1
0002a5 9632      	ADIW R30,2
0002a6 83ee      	STD  Y+6,R30
0002a7 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002a8 85e8      	LDD  R30,Y+8
0002a9 85f9      	LDD  R31,Y+8+1
0002aa 85aa      	LDD  R26,Y+10
0002ab 85bb      	LDD  R27,Y+10+1
0002ac 17ae      	CP   R26,R30
0002ad 07bf      	CPC  R27,R31
0002ae f050      	BRLO _0x202005C
0002af 5f2f      	SUBI R18,-LOW(1)
0002b0 85a8      	LDD  R26,Y+8
0002b1 85b9      	LDD  R27,Y+8+1
0002b2 85ea      	LDD  R30,Y+10
0002b3 85fb      	LDD  R31,Y+10+1
0002b4 1bea      	SUB  R30,R26
0002b5 0bfb      	SBC  R31,R27
0002b6 87ea      	STD  Y+10,R30
0002b7 87fb      	STD  Y+10+1,R31
0002b8 cfef      	RJMP _0x202005A
                 _0x202005C:
0002b9 332a      	CPI  R18,58
0002ba f028      	BRLO _0x202005D
0002bb ff03      	SBRS R16,3
0002bc c002      	RJMP _0x202005E
0002bd 5f29      	SUBI R18,-LOW(7)
0002be c001      	RJMP _0x202005F
                 _0x202005E:
0002bf 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002c0 fd04      	SBRC R16,4
0002c1 c01a      	RJMP _0x2020061
0002c2 3321      	CPI  R18,49
0002c3 f420      	BRSH _0x2020063
0002c4 85a8      	LDD  R26,Y+8
0002c5 85b9      	LDD  R27,Y+8+1
0002c6 9711      	SBIW R26,1
0002c7 f409      	BRNE _0x2020062
                 _0x2020063:
0002c8 c009      	RJMP _0x20200CD
                 _0x2020062:
0002c9 1753      	CP   R21,R19
0002ca f010      	BRLO _0x2020067
0002cb ff00      	SBRS R16,0
0002cc c001      	RJMP _0x2020068
                 _0x2020067:
0002cd c013      	RJMP _0x2020066
                 _0x2020068:
0002ce e220      	LDI  R18,LOW(32)
0002cf ff07      	SBRS R16,7
0002d0 c00b      	RJMP _0x2020069
0002d1 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002d2 6100      	ORI  R16,LOW(16)
0002d3 ff02      	SBRS R16,2
0002d4 c007      	RJMP _0x202006A
0002d5 7f0b      	ANDI R16,LOW(251)
0002d6 934a      	ST   -Y,R20
0002d7 940e 0367 	CALL SUBOPT_0x5
0002d9 3050      	CPI  R21,0
0002da f009      	BREQ _0x202006B
0002db 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002dc 940e 035a 	CALL SUBOPT_0x3
0002de 3050      	CPI  R21,0
0002df f009      	BREQ _0x202006C
0002e0 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002e1 5031      	SUBI R19,LOW(1)
0002e2 85a8      	LDD  R26,Y+8
0002e3 85b9      	LDD  R27,Y+8+1
0002e4 9712      	SBIW R26,2
0002e5 f008      	BRLO _0x2020059
0002e6 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002e7 ff00      	SBRS R16,0
0002e8 c008      	RJMP _0x202006D
                 _0x202006E:
0002e9 3050      	CPI  R21,0
0002ea f031      	BREQ _0x2020070
0002eb 5051      	SUBI R21,LOW(1)
0002ec e2e0      	LDI  R30,LOW(32)
0002ed 93ea      	ST   -Y,R30
0002ee 940e 0367 	CALL SUBOPT_0x5
0002f0 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002f1 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002f2 cee0      	RJMP _0x2020016
                 _0x2020018:
0002f3 85ac      	LDD  R26,Y+12
0002f4 85bd      	LDD  R27,Y+12+1
0002f5 940e 039d 	CALL __GETW1P
0002f7 940e 03b1 	CALL __LOADLOCR6
0002f9 9664      	ADIW R28,20
0002fa 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002fb 92ff      	PUSH R15
0002fc 2ef8      	MOV  R15,R24
0002fd 9726      	SBIW R28,6
0002fe 940e 03ac 	CALL __SAVELOCR4
000300 940e 037f 	CALL SUBOPT_0x8
000302 9730      	SBIW R30,0
000303 f419      	BRNE _0x2020072
000304 efef      	LDI  R30,LOW(65535)
000305 efff      	LDI  R31,HIGH(65535)
000306 c023      	RJMP _0x2080001
                 _0x2020072:
000307 01de      	MOVW R26,R28
000308 9616      	ADIW R26,6
000309 940e 0390 	CALL __ADDW2R15
00030b 018d      	MOVW R16,R26
00030c 940e 037f 	CALL SUBOPT_0x8
00030e 83ee      	STD  Y+6,R30
00030f 83ff      	STD  Y+6+1,R31
000310 e0e0      	LDI  R30,LOW(0)
000311 87e8      	STD  Y+8,R30
000312 87e9      	STD  Y+8+1,R30
000313 01de      	MOVW R26,R28
000314 961a      	ADIW R26,10
000315 940e 0390 	CALL __ADDW2R15
000317 940e 039d 	CALL __GETW1P
000319 93fa      	ST   -Y,R31
00031a 93ea      	ST   -Y,R30
00031b 931a      	ST   -Y,R17
00031c 930a      	ST   -Y,R16
00031d e8e7      	LDI  R30,LOW(_put_buff_G101)
00031e e0f1      	LDI  R31,HIGH(_put_buff_G101)
00031f 93fa      	ST   -Y,R31
000320 93ea      	ST   -Y,R30
000321 01de      	MOVW R26,R28
000322 961a      	ADIW R26,10
000323 dea3      	RCALL __print_G101
000324 019f      	MOVW R18,R30
000325 81ae      	LDD  R26,Y+6
000326 81bf      	LDD  R27,Y+6+1
000327 e0e0      	LDI  R30,LOW(0)
000328 93ec      	ST   X,R30
000329 01f9      	MOVW R30,R18
                 _0x2080001:
00032a 940e 03b3 	CALL __LOADLOCR4
00032c 962a      	ADIW R28,10
00032d 90ff      	POP  R15
00032e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00032f 93ba      	ST   -Y,R27
000330 93aa      	ST   -Y,R26
000331 91a9          ld   r26,y+
000332 91b9          ld   r27,y+
000333 27ee          clr  r30
000334 27ff          clr  r31
                 strlen0:
000335 916d          ld   r22,x+
000336 2366          tst  r22
000337 f011          breq strlen1
000338 9631          adiw r30,1
000339 cffb          rjmp strlen0
                 strlen1:
00033a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00033b 93ba      	ST   -Y,R27
00033c 93aa      	ST   -Y,R26
00033d 27aa          clr  r26
00033e 27bb          clr  r27
00033f 91e9          ld   r30,y+
000340 91f9          ld   r31,y+
                 strlenf0:
000341 9005      	lpm  r0,z+
000342 2000          tst  r0
000343 f011          breq strlenf1
000344 9611          adiw r26,1
000345 cffb          rjmp strlenf0
                 strlenf1:
000346 01fd          movw r30,r26
000347 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000348 940e 0398 	CALL __CWD1
00034a 940e 03a5 	CALL __PUTPARD1
00034c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00034d 940e 00fe 	CALL __lcd_write_data
00034f e0a3      	LDI  R26,LOW(3)
000350 e0b0      	LDI  R27,0
000351 940c 0386 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
000353 e3a0      	LDI  R26,LOW(48)
000354 940e 00ea 	CALL __lcd_write_nibble_G100
                +
000356 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000357 958a     +DEC R24
000358 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000359 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
00035a 932a      	ST   -Y,R18
00035b 85ad      	LDD  R26,Y+13
00035c 85be      	LDD  R27,Y+13+1
00035d 85ef      	LDD  R30,Y+15
00035e 89f8      	LDD  R31,Y+15+1
00035f 9509      	ICALL
000360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000361 89e8      	LDD  R30,Y+16
000362 89f9      	LDD  R31,Y+16+1
000363 9734      	SBIW R30,4
000364 8be8      	STD  Y+16,R30
000365 8bf9      	STD  Y+16+1,R31
000366 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000367 85ad      	LDD  R26,Y+13
000368 85be      	LDD  R27,Y+13+1
000369 85ef      	LDD  R30,Y+15
00036a 89f8      	LDD  R31,Y+15+1
00036b 9509      	ICALL
00036c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
00036d 89a8      	LDD  R26,Y+16
00036e 89b9      	LDD  R27,Y+16+1
00036f 9614      	ADIW R26,4
000370 940e 039d 	CALL __GETW1P
000372 83ee      	STD  Y+6,R30
000373 83ff      	STD  Y+6+1,R31
000374 81ae      	LDD  R26,Y+6
000375 81bf      	LDD  R27,Y+6+1
000376 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000377 89a8      	LDD  R26,Y+16
000378 89b9      	LDD  R27,Y+16+1
000379 9614      	ADIW R26,4
00037a 940e 039d 	CALL __GETW1P
00037c 87ea      	STD  Y+10,R30
00037d 87fb      	STD  Y+10+1,R31
00037e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00037f 01de      	MOVW R26,R28
000380 961c      	ADIW R26,12
000381 940e 0390 	CALL __ADDW2R15
000383 940e 039d 	CALL __GETW1P
000385 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000386 9610      	adiw r26,0
000387 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000388 ef8a     +LDI R24 , LOW ( 0xFA )
000389 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00038a 9701     +SBIW R24 , 1
00038b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00038c 95a8      	wdr
00038d 9711      	sbiw r26,1
00038e f7c9      	brne __delay_ms0
                 __delay_ms1:
00038f 9508      	ret
                 
                 __ADDW2R15:
000390 2400      	CLR  R0
000391 0daf      	ADD  R26,R15
000392 1db0      	ADC  R27,R0
000393 9508      	RET
                 
                 __ANEGW1:
000394 95f1      	NEG  R31
000395 95e1      	NEG  R30
000396 40f0      	SBCI R31,0
000397 9508      	RET
                 
                 __CWD1:
000398 2f6f      	MOV  R22,R31
000399 0f66      	ADD  R22,R22
00039a 0b66      	SBC  R22,R22
00039b 2f76      	MOV  R23,R22
00039c 9508      	RET
                 
                 __GETW1P:
00039d 91ed      	LD   R30,X+
00039e 91fc      	LD   R31,X
00039f 9711      	SBIW R26,1
0003a0 9508      	RET
                 
                 __GETW1PF:
0003a1 9005      	LPM  R0,Z+
0003a2 91f4      	LPM  R31,Z
0003a3 2de0      	MOV  R30,R0
0003a4 9508      	RET
                 
                 __PUTPARD1:
0003a5 937a      	ST   -Y,R23
0003a6 936a      	ST   -Y,R22
0003a7 93fa      	ST   -Y,R31
0003a8 93ea      	ST   -Y,R30
0003a9 9508      	RET
                 
                 __SAVELOCR6:
0003aa 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003ab 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003ac 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003ad 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003ae 931a      	ST   -Y,R17
0003af 930a      	ST   -Y,R16
0003b0 9508      	RET
                 
                 __LOADLOCR6:
0003b1 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003b2 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003b3 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003b4 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003b5 8119      	LDD  R17,Y+1
0003b6 8108      	LD   R16,Y
0003b7 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  40 r17:  32 r18:  35 r19:  13 r20:  14 r21:  21 r22:  11 r23:   2 
r24:  23 r25:   3 r26: 102 r27:  40 r28:  17 r29:   1 r30: 199 r31:  59 
x  :  23 y  : 173 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  25 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   3 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  54 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   5 cpi   :  37 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  25 ldd   :  79 ldi   : 107 
lds   :   0 lpm   :  16 lsl   :   0 lsr   :   0 mov   :  21 movw  :  19 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  42 pop   :   1 push  :   1 rcall :  21 ret   :  26 
reti  :   0 rjmp  :  61 rol   :   0 ror   :   0 sbc   :   2 sbci  :   5 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  62 std   :  33 sts   :   2 sub   :   1 subi  :  19 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000770   1840     64   1904   16384  11.6%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
